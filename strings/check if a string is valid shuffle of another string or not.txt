#include <bits/stdc++.h>
#include <algorithm>
 
#include<string>
#include<string.h>
#include <vector>
#define F first
#define S second
#define pb push_back
#define fl(i, n) for (ll i = 0; i < (n); ++i)
#define fls(i, l, n) for (ll i = (l); i < (n); ++i)
#define fli(i, l, n) for (ll i = (l); i <=n; ++i)
#define mems(z, k) memset(z, k, sizeof(z))
using namespace std;
typedef long long ll;
typedef vector<long long > vi;
typedef pair<int, int> pii;
int dx[]={1,-1 ,1 ,0, -1, 0,-1,1};
int dy[]={1, 1 ,0 ,1,  0,-1,-1,-1};
const int mod = 1e9+7;
ll modexp(ll x,ll n){ ll r=1; while(n){ if(n&1)r=(r*x)%mod; x=(x*x)%mod; n>>=1;} return r%mod;}
ll modinv(ll x){ return modexp(x,mod-2);}
ll mod_add(ll a,ll b){a=a%mod; b=b%mod; return (((a+b)%mod)+mod)%mod;}
ll mod_mul(ll a,ll b){a=a%mod; b=b%mod; return (((a*b)%mod)+mod)%mod;}
ll mod_sub(ll a,ll b){a=a%mod; b=b%mod; return (((a-b)%mod)+mod)%mod;}
ll mod_div(ll a,ll b){a=a%mod; b=b%mod; return (mod_mul(a,modinv(b))+mod)%mod;}


bool compare(ll count1[],ll count2[])
{
  for(ll i=0;i<256;i++)
  {
   if(count1[i]!=count2[i])
   {
    return false;
   }
  }
  return true;
}
bool search(string x,string y,ll m,ll n)
{
  ll count1[256]={0};
  ll count2[256]={0};


  for(ll i=0;i<m;i++)
  {
    count1[x[i]-'A']++;
    count2[y[i]-'A']++;
  }

  for(ll i=m;i<n;i++)
  {
    if(compare(count1,count2))
    return true;


    count2[x[i]-'A']++;
    count2[x[i-m]-'A']--;

  }
  if(compare(count1,count2))
  return true;
  return false;
  
}
int main()
{
 string x,y;
 cin>>x;
 cin>>y;

 ll m=x.size();
 ll n=y.size();

 if(search(x,y,m,n))
 cout<<"YES\n";
 else
 cout<<"NO\n";

}