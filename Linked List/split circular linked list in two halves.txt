void splitList(Node *head, Node **head1_ref, Node **head2_ref)
{
    if(!head)
    return;
    
    if(head->next==head)
    {
        head->next=NULL;
        *head1_ref=head;
        *head2_ref=NULL;
    }
    *head1_ref=NULL;
    *head2_ref=NULL;
    
    Node* fast=head->next->next;
    Node* slow=head->next;
    Node* prev_slow=head;
    Node* prev_fast=head->next;
    
    while(fast!=head && fast->next!=head)
    {
        prev_slow=slow;
        slow=slow->next;
        prev_fast=fast->next;
        fast=fast->next->next;
    }
    
    if(fast==head)
    {
        prev_fast->next=prev_slow->next;
        
        *head2_ref=prev_slow->next;
        prev_slow->next=head;
        *head1_ref=head;
        
    }
    else
    {
        fast->next=slow->next;
        *head2_ref=slow->next;
        slow->next=head;
        *head1_ref=head;
    }
    
    
}