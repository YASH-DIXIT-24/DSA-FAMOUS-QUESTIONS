void heapify(vector<int>&c,int i,int n)
    {
        if(i>=n)
        return;
        
        int parent=i;
        int lchild=2*i+1;
        int rchild=2*i+2;
        
        if(lchild<n && c[lchild]>c[parent])
        parent=lchild;
        
        if(rchild<n && c[rchild]>c[parent])
        parent=rchild;
        
        if(parent!=i)
        {
            int temp=c[i];
            c[i]=c[parent];
            c[parent]=temp;
            heapify(c,parent,n);
        }
    }
    vector<int> mergeHeaps(vector<int> &a, vector<int> &b, int n, int m) 
    {
        vector<int> c(n+m);
        
        for(int i=0;i<n;i++)
        {
            c[i]=a[i];
        }
        for(int i=0;i<m;i++)
        {
            c[i+n]=b[i];
        }
        int x=((n+m)/2)-1;
        
        
        for(int i=x;i>=0;i--)
        {
            heapify(c,i,n+m);
        }
        
        
        
        return c;
    }