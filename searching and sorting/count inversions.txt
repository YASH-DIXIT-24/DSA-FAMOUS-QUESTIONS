typedef long long int ll;
    ll count=0;
    void merge(ll a[],ll p, ll q, ll r)
    {
        ll n1,n2;
        n1=q-p+1;
        n2=r-q;
        ll a1[n1];
        ll a2[n2];
        for(ll i=0;i<n1;i++)
        {
            a1[i]=a[p+i];
        }
        for(ll i=0;i<n2;i++)
        {
            a2[i]=a[q+1+i];
        }
        ll i=0;
        ll j=0;
        ll k=p;
        while(i<n1 && j<n2 )
        {
            if(a1[i]<=a2[j])
            {
                a[k]=a1[i];
                i++;
                k++;
            }
            else
            {
                count+=(n1-i);
                a[k]=a2[j];
                j++;
                k++;
            }
        }
        
        while(i<n1)
        {
            a[k]=a1[i];
            i++;
            k++;
        }
        
        while(j<n2)
        {
            a[k]=a2[j];
            j++;
            k++;
        }

    }
    void merge_sort(ll a[],ll p, ll r)
    {
        if(p>=r)
        return ;
        
        ll q=(p+r)/2;
        
        merge_sort(a,p,q);
        merge_sort(a,q+1,r);
        merge(a,p,q,r);
    }
    ll inversionCount(ll nums[], ll n)
    {
      merge_sort(nums,0,n-1);
      
      return count;
    }