int toInt(string s) 
{ 
    int num = 0; 
    if(s[0]!='-') 
        for (int i=0; i<s.length(); i++) 
            num = num*10 + (s[i]-'0'); 
    else
    {
        for (int i=1; i<s.length(); i++) 
        { 
        num = num*10 + (s[i]-'0');
        
        }
        num = num*(-1);
    }
    return num; 
} 
    int evalTree(node* root) {
        if(!root)
        return 0;
        
        if(!root->left && !root->right)
        return toInt(root->data);
        
        int left=evalTree(root->left);
        int right=evalTree(root->right);
        
        if(root->data=="+")
        return left+right;
        
        else if(root->data=="-")
        return left-right;
        
        else if(root->data=="*")
        return left*right;
        
        return left/right;
    }